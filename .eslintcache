[{"D:\\Dev\\Fincances-Frontend\\src\\reportWebVitals.js":"1","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\searchEntry.js":"2","D:\\Dev\\Fincances-Frontend\\src\\views\\login.js":"3","D:\\Dev\\Fincances-Frontend\\src\\app\\apiServices.js":"4","D:\\Dev\\Fincances-Frontend\\src\\main\\App.js":"5","D:\\Dev\\Fincances-Frontend\\src\\views\\home.js":"6","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\entryTable.js":"7","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\entryService.js":"8","D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navItem.js":"9","D:\\Dev\\Fincances-Frontend\\src\\components\\selectMenu.js":"10","D:\\Dev\\Fincances-Frontend\\src\\views\\signUp.js":"11","D:\\Dev\\Fincances-Frontend\\src\\index.js":"12","D:\\Dev\\Fincances-Frontend\\src\\components\\card.js":"13"},{"size":375,"mtime":1609197050802,"results":"14","hashOfConfig":"15"},{"size":9123,"mtime":1609256691527,"results":"16","hashOfConfig":"15"},{"size":4344,"mtime":1609197050804,"results":"17","hashOfConfig":"15"},{"size":566,"mtime":1609197050790,"results":"18","hashOfConfig":"15"},{"size":596,"mtime":1609197965023,"results":"19","hashOfConfig":"15"},{"size":1961,"mtime":1609197050804,"results":"20","hashOfConfig":"15"},{"size":2201,"mtime":1609246938975,"results":"21","hashOfConfig":"15"},{"size":2438,"mtime":1609248762467,"results":"22","hashOfConfig":"15"},{"size":226,"mtime":1609197050792,"results":"23","hashOfConfig":"15"},{"size":439,"mtime":1609197050792,"results":"24","hashOfConfig":"15"},{"size":7946,"mtime":1609197050804,"results":"25","hashOfConfig":"15"},{"size":499,"mtime":1609197050801,"results":"26","hashOfConfig":"15"},{"size":654,"mtime":1609197050791,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6quuq7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\Fincances-Frontend\\src\\reportWebVitals.js",[],["59","60"],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\searchEntry.js",["61","62","63","64","65"],"D:\\Dev\\Fincances-Frontend\\src\\views\\login.js",["66"],"import React from 'react'\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { FaSignInAlt } from 'react-icons/fa'\r\nimport { withRouter } from 'react-router-dom'\r\nimport UserService from '../app/service/userService'\r\nimport LocalStorageService from '../app/service/localStorageService'\r\nimport {errorPopUp, successPopUp} from '../components/toastr'\r\n\r\nclass Login extends React.Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.userService = new UserService;\r\n    }\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        errorEmailMessage: null,\r\n        inputEmailErrorClass: null,\r\n        errorPasswordMessage: null,\r\n        inputPasswordErrorClass: null\r\n    }\r\n\r\n    resetView = () => {\r\n        this.setState({errorEmailMessage: null})\r\n        this.setState({inputEmailErrorClass: null})\r\n        this.setState({errorPasswordMessage: null})\r\n        this.setState({inputPasswordErrorClass: null})\r\n    }\r\n\r\n    login = () => {\r\n        this.resetView()\r\n        this.userService.auth(\r\n        {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(response => {\r\n            LocalStorageService.addItem('userLoggedIn', response.data)\r\n            successPopUp(\"Login efetuado com sucesso\")\r\n            this.props.history.push(\"/home\")\r\n        }).catch(error => {\r\n            var data = error.response.data\r\n            if(data.toLowerCase().includes(\"email\")){\r\n            this.setState({errorEmailMessage: error.response.data})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            } else if(data.toLowerCase().includes(\"senha\")){\r\n                this.setState({errorPasswordMessage: error.response.data})\r\n                this.setState({inputPasswordErrorClass: \"is-invalid\"})\r\n            }\r\n            errorPopUp(error.response.data)\r\n        })\r\n    }\r\n\r\n    signUp = () => {\r\n        this.props.history.push('/signUp')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6\" style = { {position : 'relative', left : '300px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                        <Card title = \"Login\">\r\n                            <fieldset>\r\n                                <FormGroup label = \"Email: \" htmlFor = \"exampleInputEmail1\">\r\n                                    <input type=\"email\"\r\n                                    className={\"form-control \" + this.state.inputEmailErrorClass}\r\n                                    value = {this.state.email}\r\n                                    onChange = {e => this.setState({email: e.target.value})}\r\n                                    id=\"exampleInputEmail1\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Digite o Email\" />\r\n                                    <div className=\"invalid-feedback\">{this.state.errorEmailMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Senha: \" htmlFor = \"exampleInputPassword1\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.inputPasswordErrorClass}\r\n                                    value = {this.state.password}\r\n                                    onChange = {e => this.setState({password: e.target.value})}\r\n                                    id=\"exampleInputPassword1\"\r\n                                    placeholder=\"Password\" />\r\n                                    <div className=\"invalid-feedback\">{this.state.errorPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <button className=\"btn btn-success\" onClick = {this.login}><FaSignInAlt />  Entrar</button>\r\n                                <button className=\"btn btn-danger right-button\"\r\n                                onClick={this.signUp} ><FaSave />  Cadastrar</button>\r\n                            </fieldset>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(Login)","D:\\Dev\\Fincances-Frontend\\src\\app\\apiServices.js",[],"D:\\Dev\\Fincances-Frontend\\src\\main\\App.js",[],["67","68"],"D:\\Dev\\Fincances-Frontend\\src\\views\\home.js",["69"],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\entryTable.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\entryService.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navItem.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\selectMenu.js",[],"D:\\Dev\\Fincances-Frontend\\src\\views\\signUp.js",["70"],"import React from 'react'\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport { FaCheckSquare } from 'react-icons/fa';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom'\r\nimport UserService from '../app/service/userService';\r\nimport { successPopUp, errorPopUp } from '../components/toastr';\r\n\r\n\r\nclass SingUp extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.userService = new UserService;\r\n    }\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        errorEmailMessage: null,\r\n        inputEmailErrorClass: null,\r\n        errorConfirmPasswordMessage: null,\r\n        inputConfirmPasswordErrorClass: null,\r\n        errorPasswordMessage: null,\r\n        inputPasswordErrorClass: null,\r\n        errorNameMessage: null,\r\n        inputNameErrorClass: null,\r\n        signUpSuccessInputClass: null\r\n    }\r\n    resetView = () => {\r\n        this.setState({errorEmailMessage: null})\r\n        this.setState({inputEmailErrorClass: null})\r\n        this.setState({errorConfirmPasswordMessage: null})\r\n        this.setState({inputConfirmPasswordErrorClass: null})\r\n        this.setState({errorPasswordMessage: null})\r\n        this.setState({inputPasswordErrorClass: null})\r\n        this.setState({errorNameMessage: null})\r\n        this.setState({inputNameErrorClass: null})\r\n        this.setState({signUpSuccessInputClass: null})\r\n\r\n    }\r\n    checkData = () => {\r\n        var check = true\r\n\r\n        if(!this.state.name){\r\n            this.setState({errorNameMessage: \"Campo nome é obrigatório\"})\r\n            this.setState({inputNameErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        if(!this.state.email){\r\n            this.setState({errorEmailMessage: \"Campo email é obrigatório\"})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            check=false\r\n        } else if(!this.state.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\r\n            this.setState({errorEmailMessage: \"Informe um email válido\"})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        if(!this.state.password){\r\n            this.setState({errorPasswordMessage: \"Campo senha é obrigatório\"})\r\n            this.setState({inputPasswordErrorClass: \"is-invalid\"})    \r\n            check=false        \r\n        }\r\n        if(!this.state.confirmPassword){\r\n            this.setState({errorConfirmPasswordMessage: \"Campo confirmação de senha é obrigatório\"})\r\n            this.setState({inputConfirmPasswordErrorClass: \"is-invalid\"})    \r\n            check=false  \r\n        }\r\n        if(this.state.password && this.state.confirmPassword && this.state.password !== this.state.confirmPassword){\r\n            this.setState({errorConfirmPasswordMessage: \"As senhas não conferem\"})\r\n            this.setState({inputConfirmPasswordErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        return check\r\n    }\r\n\r\n    signUp = () => {\r\n        this.resetView()\r\n        if(this.checkData()){\r\n            this.userService.signUp({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }).then(response => {\r\n                successPopUp('Usuário cadastrado com sucesso')\r\n                this.setState({signUpSuccessInputClass: \"is-valid\"})\r\n            }).catch(error => {\r\n                var data = error.response.data\r\n                errorPopUp(data)                \r\n            })\r\n        }\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6\" style = { {position : 'relative', left : '300px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                        <Card title = \"Cadastro de Usuário\">\r\n                        <fieldset>\r\n                                <FormGroup label = \"Nome: \" htmlFor = \"InputName\">\r\n                                    <input type=\"text\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputNameErrorClass}\r\n                                    name = \"name\"\r\n                                    value = {this.state.name}\r\n                                    onChange = {e => this.setState({name: e.target.value})}\r\n                                    id=\"InputName\"\r\n                                    aria-describedby=\"NameHelp\"\r\n                                    placeholder=\"Digite seu nome\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorNameMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Email: \" htmlFor = \"InputEmail\">\r\n                                    <input type=\"email\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputEmailErrorClass}\r\n                                    name = \"email\"\r\n                                    value = {this.state.email}\r\n                                    onChange = {e => this.setState({email: e.target.value})}\r\n                                    id=\"InputEmail\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Digite seu Email\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorEmailMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Senha: \" htmlFor = \"InputPassword\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputPasswordErrorClass}\r\n                                    name = \"password\"\r\n                                    value = {this.state.password}\r\n                                    onChange = {e => this.setState({password: e.target.value})}\r\n                                    id=\"InputPassword\"\r\n                                    placeholder=\"Digite a senha\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Confirmação de Senha: \" htmlFor = \"InputConfirmPassword\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.inputConfirmPasswordErrorClass + \" \"\r\n                                                + this.state.signUpSuccessInputClass}\r\n                                    value = {this.state.confirmPassword}\r\n                                    onChange = {e => this.setState({confirmPassword: e.target.value})}\r\n                                    id=\"InputConfirmPassword\"\r\n                                    placeholder=\"Repita a senha\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorConfirmPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <button className=\"btn btn-success\" onClick={this.signUp} ><FaCheckSquare />  Cadastrar</button>\r\n                                <button className=\"btn btn-danger right-button\" onClick={this.cancel}><FaTimes />  Cancelar</button>\r\n                            </fieldset>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SingUp)",["71","72"],"D:\\Dev\\Fincances-Frontend\\src\\index.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\card.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":27},{"ruleId":"77","severity":1,"message":"81","line":14,"column":9,"nodeType":"79","messageId":"80","endLine":14,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":24,"column":29,"nodeType":"84","messageId":"85","endLine":24,"endColumn":45,"fix":"86"},{"ruleId":"82","severity":1,"message":"83","line":25,"column":28,"nodeType":"84","messageId":"85","endLine":25,"endColumn":43,"fix":"87"},{"ruleId":"82","severity":1,"message":"83","line":26,"column":32,"nodeType":"84","messageId":"85","endLine":26,"endColumn":51,"fix":"88"},{"ruleId":"82","severity":1,"message":"83","line":15,"column":28,"nodeType":"84","messageId":"85","endLine":15,"endColumn":43,"fix":"89"},{"ruleId":"73","replacedBy":"90"},{"ruleId":"75","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"83","line":11,"column":26,"nodeType":"84","messageId":"85","endLine":11,"endColumn":41,"fix":"92"},{"ruleId":"82","severity":1,"message":"83","line":15,"column":28,"nodeType":"84","messageId":"85","endLine":15,"endColumn":43,"fix":"93"},{"ruleId":"73","replacedBy":"94"},{"ruleId":"75","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'LocalStorageService' is defined but never used.","Identifier","unusedVar","'FiAlertTriangle' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"98","text":"99"},{"range":"100","text":"99"},{"range":"101","text":"99"},{"range":"102","text":"99"},["96"],["97"],{"range":"103","text":"99"},{"range":"104","text":"99"},["96"],["97"],"no-global-assign","no-unsafe-negation",[916,916],"()",[961,961],[1014,1014],[563,563],[361,361],[502,502]]