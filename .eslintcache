[{"D:\\Dev\\Fincances-Frontend\\src\\reportWebVitals.js":"1","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\searchEntry.js":"2","D:\\Dev\\Fincances-Frontend\\src\\views\\login.js":"3","D:\\Dev\\Fincances-Frontend\\src\\app\\apiServices.js":"4","D:\\Dev\\Fincances-Frontend\\src\\main\\App.js":"5","D:\\Dev\\Fincances-Frontend\\src\\views\\home.js":"6","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\entryTable.js":"7","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\entryService.js":"8","D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navItem.js":"9","D:\\Dev\\Fincances-Frontend\\src\\components\\selectMenu.js":"10","D:\\Dev\\Fincances-Frontend\\src\\views\\signUp.js":"11","D:\\Dev\\Fincances-Frontend\\src\\index.js":"12","D:\\Dev\\Fincances-Frontend\\src\\components\\card.js":"13","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\userService.js":"14","D:\\Dev\\Fincances-Frontend\\src\\main\\routes.js":"15","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\localStorageService.js":"16","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\generalServices.js":"17","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\primereactCrudTable.js":"18"},{"size":375,"mtime":1609197050802,"results":"19","hashOfConfig":"20"},{"size":16441,"mtime":1609790316713,"results":"21","hashOfConfig":"20"},{"size":4709,"mtime":1609337702841,"results":"22","hashOfConfig":"20"},{"size":566,"mtime":1609197050790,"results":"23","hashOfConfig":"20"},{"size":742,"mtime":1609251832208,"results":"24","hashOfConfig":"20"},{"size":2435,"mtime":1609336630903,"results":"25","hashOfConfig":"20"},{"size":8018,"mtime":1609766139316,"results":"26","hashOfConfig":"20"},{"size":2662,"mtime":1609789296114,"results":"27","hashOfConfig":"20"},{"size":226,"mtime":1609197050792,"results":"28","hashOfConfig":"20"},{"size":469,"mtime":1609783664532,"results":"29","hashOfConfig":"20"},{"size":7946,"mtime":1609197050804,"results":"30","hashOfConfig":"20"},{"size":499,"mtime":1609197050801,"results":"31","hashOfConfig":"20"},{"size":654,"mtime":1609197050791,"results":"32","hashOfConfig":"20"},{"size":475,"mtime":1609274875768,"results":"33","hashOfConfig":"20"},{"size":692,"mtime":1609336528503,"results":"34","hashOfConfig":"20"},{"size":259,"mtime":1609197050791,"results":"35","hashOfConfig":"20"},{"size":203,"mtime":1609197050790,"results":"36","hashOfConfig":"20"},{"size":11609,"mtime":1609790296486,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"6quuq7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\Dev\\Fincances-Frontend\\src\\reportWebVitals.js",[],["83","84"],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\searchEntry.js",["85","86","87","88","89"],"D:\\Dev\\Fincances-Frontend\\src\\views\\login.js",["90"],"import React from 'react'\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { FaSignInAlt } from 'react-icons/fa'\r\nimport { withRouter } from 'react-router-dom'\r\nimport UserService from '../app/service/userService'\r\nimport LocalStorageService from '../app/service/localStorageService'\r\nimport {errorPopUp, successPopUp} from '../components/toastr'\r\n\r\nclass Login extends React.Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.userService = new UserService;\r\n    }\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        errorEmailMessage: null,\r\n        inputEmailErrorClass: null,\r\n        errorPasswordMessage: null,\r\n        inputPasswordErrorClass: null\r\n    }\r\n\r\n    resetView = () => {\r\n        this.setState({errorEmailMessage: null})\r\n        this.setState({inputEmailErrorClass: null})\r\n        this.setState({errorPasswordMessage: null})\r\n        this.setState({inputPasswordErrorClass: null})\r\n    }\r\n\r\n    login = () => {\r\n        this.resetView()\r\n        this.userService.auth(\r\n        {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(response => {\r\n            const user = response.data\r\n            LocalStorageService.addItem('userLoggedIn', user)\r\n            successPopUp(\"Login efetuado com sucesso\")\r\n            this.props.history.push(`/home/${user.name}/${user.email}`)\r\n        }).catch(error => {\r\n            var data = error.response.data\r\n            if(data.toLowerCase().includes(\"email\")){\r\n            this.setState({errorEmailMessage: error.response.data})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            } else if(data.toLowerCase().includes(\"senha\")){\r\n                this.setState({errorPasswordMessage: error.response.data})\r\n                this.setState({inputPasswordErrorClass: \"is-invalid\"})\r\n            }\r\n            errorPopUp(error.response.data)\r\n        })\r\n    }\r\n\r\n    handleKeypress = e => {\r\n        //it triggers by pressing the enter key\r\n      if (e.key === \"Enter\") {\r\n        this.login();\r\n      }\r\n    };\r\n\r\n    signUp = () => {\r\n        this.props.history.push('/signUp')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6\" style = { {position : 'relative', left : '300px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                        <Card title = \"Login\">\r\n                            <fieldset>\r\n                                <FormGroup label = \"Email: \" htmlFor = \"exampleInputEmail1\">\r\n                                    <input type=\"email\"\r\n                                    className={\"form-control \" + this.state.inputEmailErrorClass}\r\n                                    value = {this.state.email}\r\n                                    onChange = {e => this.setState({email: e.target.value})}\r\n                                    onKeyPress={this.handleKeypress}\r\n                                    id=\"exampleInputEmail1\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Digite o Email\" />\r\n                                    <div className=\"invalid-feedback\">{this.state.errorEmailMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Senha: \" htmlFor = \"exampleInputPassword1\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.inputPasswordErrorClass}\r\n                                    value = {this.state.password}\r\n                                    onChange = {e => this.setState({password: e.target.value})}\r\n                                    onKeyPress={this.handleKeypress}\r\n                                    id=\"exampleInputPassword1\"\r\n                                    placeholder=\"Password\" />\r\n                                    <div className=\"invalid-feedback\">{this.state.errorPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <button type=\"submit\" className=\"btn btn-success\" onSubmit = {this.login}><FaSignInAlt />  Entrar</button>\r\n                                <button className=\"btn btn-danger right-button\"\r\n                                onClick={this.signUp} ><FaSave />  Cadastrar</button>\r\n                            </fieldset>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(Login)","D:\\Dev\\Fincances-Frontend\\src\\app\\apiServices.js",[],"D:\\Dev\\Fincances-Frontend\\src\\main\\App.js",[],["91","92"],"D:\\Dev\\Fincances-Frontend\\src\\views\\home.js",["93"],"import React from 'react'\r\nimport LocalStorageService from '../app/service/localStorageService';\r\nimport UserService from '../app/service/userService';\r\nimport {HiUserGroup} from 'react-icons/hi'\r\nimport {MdAttachMoney} from 'react-icons/md'\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(){\r\n      super();\r\n      this.userService = new UserService;\r\n    }\r\n    state = {\r\n      balance: 0,\r\n      name: '',\r\n      email: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n      const user = LocalStorageService.getItem(\"userLoggedIn\")\r\n      this.userService.getBalance(user.id)\r\n        .then(response => {\r\n          this.setState({balance: response.data})\r\n        }).catch(error => {\r\n          console.error(error.response)\r\n        })\r\n        const params = this.props.match.params\r\n        this.setState({name: params.name})\r\n        this.setState({email: params.email})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div className = \"row\">\r\n                <div className = \"col-md-10\" style = { {position : 'relative', left : '100px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                      <div className=\"jumbotron\">\r\n                        { this.state.name && this.state.email ?\r\n                        (\r\n                          <h1 >Bem vindo, {this.state.name}, {this.state.email}!</h1>\r\n                        ) : \r\n                        (\r\n                          <h1 >Bem vindo!</h1>\r\n                        )\r\n                        }\r\n                      <p >Esse é seu sistema de finanças.</p>\r\n                      <p >Seu saldo para o mês atual é de R$ {this.state.balance}</p>\r\n                      <hr className=\"my-4\" />\r\n                      <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\r\n                      <p className=\"lead\">\r\n                        <a className=\"btn btn-primary\"\r\n                        href=\"#/signUp\"\r\n                        role=\"button\"><HiUserGroup />  Cadastrar Usuário</a>\r\n                        <a className=\"btn btn-danger right-button\"\r\n                        href=\"#/searchEntry\"\r\n                        role=\"button\"><MdAttachMoney />  Cadastrar Lançamento</a>\r\n                      </p>\r\n                      </div>\r\n                    </div>      \r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home",["94","95"],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\entryTable.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\entryService.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navItem.js",[],["96","97"],"D:\\Dev\\Fincances-Frontend\\src\\components\\selectMenu.js",[],"D:\\Dev\\Fincances-Frontend\\src\\views\\signUp.js",["98"],"import React from 'react'\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport { FaCheckSquare } from 'react-icons/fa';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom'\r\nimport UserService from '../app/service/userService';\r\nimport { successPopUp, errorPopUp } from '../components/toastr';\r\n\r\n\r\nclass SingUp extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.userService = new UserService;\r\n    }\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        errorEmailMessage: null,\r\n        inputEmailErrorClass: null,\r\n        errorConfirmPasswordMessage: null,\r\n        inputConfirmPasswordErrorClass: null,\r\n        errorPasswordMessage: null,\r\n        inputPasswordErrorClass: null,\r\n        errorNameMessage: null,\r\n        inputNameErrorClass: null,\r\n        signUpSuccessInputClass: null\r\n    }\r\n    resetView = () => {\r\n        this.setState({errorEmailMessage: null})\r\n        this.setState({inputEmailErrorClass: null})\r\n        this.setState({errorConfirmPasswordMessage: null})\r\n        this.setState({inputConfirmPasswordErrorClass: null})\r\n        this.setState({errorPasswordMessage: null})\r\n        this.setState({inputPasswordErrorClass: null})\r\n        this.setState({errorNameMessage: null})\r\n        this.setState({inputNameErrorClass: null})\r\n        this.setState({signUpSuccessInputClass: null})\r\n\r\n    }\r\n    checkData = () => {\r\n        var check = true\r\n\r\n        if(!this.state.name){\r\n            this.setState({errorNameMessage: \"Campo nome é obrigatório\"})\r\n            this.setState({inputNameErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        if(!this.state.email){\r\n            this.setState({errorEmailMessage: \"Campo email é obrigatório\"})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            check=false\r\n        } else if(!this.state.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\r\n            this.setState({errorEmailMessage: \"Informe um email válido\"})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        if(!this.state.password){\r\n            this.setState({errorPasswordMessage: \"Campo senha é obrigatório\"})\r\n            this.setState({inputPasswordErrorClass: \"is-invalid\"})    \r\n            check=false        \r\n        }\r\n        if(!this.state.confirmPassword){\r\n            this.setState({errorConfirmPasswordMessage: \"Campo confirmação de senha é obrigatório\"})\r\n            this.setState({inputConfirmPasswordErrorClass: \"is-invalid\"})    \r\n            check=false  \r\n        }\r\n        if(this.state.password && this.state.confirmPassword && this.state.password !== this.state.confirmPassword){\r\n            this.setState({errorConfirmPasswordMessage: \"As senhas não conferem\"})\r\n            this.setState({inputConfirmPasswordErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        return check\r\n    }\r\n\r\n    signUp = () => {\r\n        this.resetView()\r\n        if(this.checkData()){\r\n            this.userService.signUp({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }).then(response => {\r\n                successPopUp('Usuário cadastrado com sucesso')\r\n                this.setState({signUpSuccessInputClass: \"is-valid\"})\r\n            }).catch(error => {\r\n                var data = error.response.data\r\n                errorPopUp(data)                \r\n            })\r\n        }\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6\" style = { {position : 'relative', left : '300px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                        <Card title = \"Cadastro de Usuário\">\r\n                        <fieldset>\r\n                                <FormGroup label = \"Nome: \" htmlFor = \"InputName\">\r\n                                    <input type=\"text\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputNameErrorClass}\r\n                                    name = \"name\"\r\n                                    value = {this.state.name}\r\n                                    onChange = {e => this.setState({name: e.target.value})}\r\n                                    id=\"InputName\"\r\n                                    aria-describedby=\"NameHelp\"\r\n                                    placeholder=\"Digite seu nome\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorNameMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Email: \" htmlFor = \"InputEmail\">\r\n                                    <input type=\"email\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputEmailErrorClass}\r\n                                    name = \"email\"\r\n                                    value = {this.state.email}\r\n                                    onChange = {e => this.setState({email: e.target.value})}\r\n                                    id=\"InputEmail\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Digite seu Email\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorEmailMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Senha: \" htmlFor = \"InputPassword\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputPasswordErrorClass}\r\n                                    name = \"password\"\r\n                                    value = {this.state.password}\r\n                                    onChange = {e => this.setState({password: e.target.value})}\r\n                                    id=\"InputPassword\"\r\n                                    placeholder=\"Digite a senha\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Confirmação de Senha: \" htmlFor = \"InputConfirmPassword\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.inputConfirmPasswordErrorClass + \" \"\r\n                                                + this.state.signUpSuccessInputClass}\r\n                                    value = {this.state.confirmPassword}\r\n                                    onChange = {e => this.setState({confirmPassword: e.target.value})}\r\n                                    id=\"InputConfirmPassword\"\r\n                                    placeholder=\"Repita a senha\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorConfirmPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <button className=\"btn btn-success\" onClick={this.signUp} ><FaCheckSquare />  Cadastrar</button>\r\n                                <button className=\"btn btn-danger right-button\" onClick={this.cancel}><FaTimes />  Cancelar</button>\r\n                            </fieldset>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SingUp)",["99","100"],"D:\\Dev\\Fincances-Frontend\\src\\index.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\card.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\userService.js",[],"D:\\Dev\\Fincances-Frontend\\src\\main\\routes.js",[],["101","102"],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\localStorageService.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\generalServices.js",[],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\primereactCrudTable.js",["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":18,"column":10,"nodeType":"111","messageId":"112","endLine":18,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":26,"column":29,"nodeType":"116","messageId":"117","endLine":26,"endColumn":45,"fix":"118"},{"ruleId":"114","severity":1,"message":"115","line":27,"column":28,"nodeType":"116","messageId":"117","endLine":27,"endColumn":43,"fix":"119"},{"ruleId":"114","severity":1,"message":"115","line":28,"column":32,"nodeType":"116","messageId":"117","endLine":28,"endColumn":51,"fix":"120"},{"ruleId":"114","severity":1,"message":"115","line":15,"column":28,"nodeType":"116","messageId":"117","endLine":15,"endColumn":43,"fix":"121"},{"ruleId":"105","replacedBy":"122"},{"ruleId":"107","replacedBy":"123"},{"ruleId":"114","severity":1,"message":"115","line":11,"column":26,"nodeType":"116","messageId":"117","endLine":11,"endColumn":41,"fix":"124"},{"ruleId":"105","replacedBy":"125"},{"ruleId":"107","replacedBy":"126"},{"ruleId":"105","replacedBy":"127"},{"ruleId":"107","replacedBy":"128"},{"ruleId":"114","severity":1,"message":"115","line":15,"column":28,"nodeType":"116","messageId":"117","endLine":15,"endColumn":43,"fix":"129"},{"ruleId":"105","replacedBy":"130"},{"ruleId":"107","replacedBy":"131"},{"ruleId":"105","replacedBy":"132"},{"ruleId":"107","replacedBy":"133"},{"ruleId":"109","severity":1,"message":"134","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":41,"column":29,"nodeType":"116","messageId":"117","endLine":41,"endColumn":45,"fix":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'EntryTable' is defined but never used.","Identifier","unusedVar","'InputText' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"138","text":"139"},{"range":"140","text":"139"},{"range":"141","text":"139"},{"range":"142","text":"139"},["136"],["137"],{"range":"143","text":"139"},["136"],["137"],["136"],["137"],{"range":"144","text":"139"},["136"],["137"],["136"],["137"],"'FileUpload' is defined but never used.",{"range":"145","text":"139"},"no-global-assign","no-unsafe-negation",[1020,1020],"()",[1065,1065],[1118,1118],[563,563],[361,361],[502,502],[1252,1252]]