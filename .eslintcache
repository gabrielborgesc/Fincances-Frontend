[{"D:\\Dev\\Fincances-Frontend\\src\\reportWebVitals.js":"1","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\searchEntry.js":"2","D:\\Dev\\Fincances-Frontend\\src\\views\\login.js":"3","D:\\Dev\\Fincances-Frontend\\src\\app\\apiServices.js":"4","D:\\Dev\\Fincances-Frontend\\src\\main\\App.js":"5","D:\\Dev\\Fincances-Frontend\\src\\views\\home.js":"6","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\entryTable.js":"7","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\entryService.js":"8","D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navItem.js":"9","D:\\Dev\\Fincances-Frontend\\src\\components\\selectMenu.js":"10","D:\\Dev\\Fincances-Frontend\\src\\views\\signUp.js":"11","D:\\Dev\\Fincances-Frontend\\src\\index.js":"12","D:\\Dev\\Fincances-Frontend\\src\\components\\card.js":"13","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\userService.js":"14","D:\\Dev\\Fincances-Frontend\\src\\main\\routes.js":"15","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\localStorageService.js":"16","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\generalServices.js":"17","D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\primereactCrudTable.js":"18","D:\\Dev\\Fincances-Frontend\\src\\components\\toastr.js":"19","D:\\Dev\\Fincances-Frontend\\src\\components\\form-group.js":"20","D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navbar.js":"21","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\authService.js":"22","D:\\Dev\\Fincances-Frontend\\src\\main\\authProvider.js":"23","D:\\Dev\\Fincances-Frontend\\src\\app\\service\\sessionStorageService.js":"24"},{"size":375,"mtime":1609197050802,"results":"25","hashOfConfig":"26"},{"size":16556,"mtime":1609870466433,"results":"27","hashOfConfig":"26"},{"size":4708,"mtime":1609871923755,"results":"28","hashOfConfig":"26"},{"size":630,"mtime":1609875939171,"results":"29","hashOfConfig":"26"},{"size":839,"mtime":1609851825998,"results":"30","hashOfConfig":"26"},{"size":2555,"mtime":1609869986491,"results":"31","hashOfConfig":"26"},{"size":7895,"mtime":1609870332302,"results":"32","hashOfConfig":"26"},{"size":2758,"mtime":1609793144016,"results":"33","hashOfConfig":"26"},{"size":320,"mtime":1609848406675,"results":"34","hashOfConfig":"26"},{"size":469,"mtime":1609783664532,"results":"35","hashOfConfig":"26"},{"size":8447,"mtime":1609872041673,"results":"36","hashOfConfig":"26"},{"size":499,"mtime":1609197050801,"results":"37","hashOfConfig":"26"},{"size":654,"mtime":1609197050791,"results":"38","hashOfConfig":"26"},{"size":475,"mtime":1609274875768,"results":"39","hashOfConfig":"26"},{"size":2185,"mtime":1609869111450,"results":"40","hashOfConfig":"26"},{"size":335,"mtime":1609865937618,"results":"41","hashOfConfig":"26"},{"size":203,"mtime":1609197050790,"results":"42","hashOfConfig":"26"},{"size":12953,"mtime":1609871603464,"results":"43","hashOfConfig":"26"},{"size":920,"mtime":1609197050792,"results":"44","hashOfConfig":"26"},{"size":256,"mtime":1609197050791,"results":"45","hashOfConfig":"26"},{"size":2154,"mtime":1609857809201,"results":"46","hashOfConfig":"26"},{"size":865,"mtime":1609869593667,"results":"47","hashOfConfig":"26"},{"size":1522,"mtime":1609870203986,"results":"48","hashOfConfig":"26"},{"size":711,"mtime":1609871122818,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6quuq7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\Dev\\Fincances-Frontend\\src\\reportWebVitals.js",[],["106","107"],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\searchEntry.js",[],"D:\\Dev\\Fincances-Frontend\\src\\views\\login.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\apiServices.js",[],"D:\\Dev\\Fincances-Frontend\\src\\main\\App.js",[],["108","109"],"D:\\Dev\\Fincances-Frontend\\src\\views\\home.js",[],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\entryTable.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\entryService.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navItem.js",[],["110","111"],"D:\\Dev\\Fincances-Frontend\\src\\components\\selectMenu.js",[],"D:\\Dev\\Fincances-Frontend\\src\\views\\signUp.js",[],"D:\\Dev\\Fincances-Frontend\\src\\index.js",[],["112","113"],"D:\\Dev\\Fincances-Frontend\\src\\components\\card.js",[],["114","115"],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\userService.js",[],"D:\\Dev\\Fincances-Frontend\\src\\main\\routes.js",["116"],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\localStorageService.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\generalServices.js",[],"D:\\Dev\\Fincances-Frontend\\src\\views\\entry\\primereactCrudTable.js",["117"],"import React from 'react'\r\nimport { Toast } from 'primereact/toast'\r\nimport { Button } from 'primereact/button'\r\nimport { FileUpload } from 'primereact/fileupload'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { InputNumber } from 'primereact/inputnumber'\r\nimport { Toolbar } from 'primereact/toolbar'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { Dialog } from 'primereact/dialog'\r\n\r\nimport EntryService from '../../app/service/entryService'\r\nimport SelectMenu from '../../components/selectMenu'\r\nimport currecyFormater from 'currency-formatter'\r\nimport * as popUp from '../../components/toastr'\r\n\r\nclass CrudTable extends React.Component {\r\n\r\n    state = {\r\n        year: '',\r\n        month: '',\r\n        type: '',\r\n        status: '',\r\n        value: null,\r\n        user: {\r\n            email: ''\r\n        },\r\n        description: '',\r\n        selectedEntries: null,\r\n        globalFilter: null,\r\n        entryDialog: false,\r\n        submitted: false,\r\n        displayConfirmation: false,\r\n        editId: null,\r\n    }\r\n    constructor(){\r\n        super()\r\n        this.toast = React.createRef()\r\n        this.dt = React.createRef()\r\n        this.entryService = new EntryService();\r\n\r\n    }\r\n\r\n    valueBodyTemplate = (rowData) => {\r\n        return currecyFormater.format(rowData.value, {locale: 'pt-BR'})\r\n    }\r\n\r\n    editProduct = (entry) => {\r\n        this.setState({year: entry.year})\r\n        this.setState({month: entry.month})\r\n        this.setState({type: entry.entryType})\r\n        this.setState({status: entry.entryStatus})\r\n        this.setState({value: entry.value})\r\n        this.setState({user: entry.user})\r\n        this.setState({description: entry.description})\r\n        this.setState({entryDialog: true})\r\n        this.setState({editId: entry.id})\r\n    }\r\n\r\n    hideDialog = () => {\r\n        this.setState({submitted: false})\r\n        this.setState({entryDialog: false})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const value = event.target.value\r\n        const name = event.target.name\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    exportCSV = () => {\r\n        this.dt.current.exportCSV();\r\n    }\r\n\r\n    delete = () => {\r\n        if(this.state.selectedEntries){\r\n            this.setState({displayConfirmation: true})\r\n        } else {\r\n            popUp.warningPopUp(\"Nenhum lançamento foi selecionado para deleção\")\r\n        }\r\n    }\r\n\r\n    updateEntry = () => {\r\n        this.entryService.update(this.state.editId,\r\n            {\r\n                year: this.state.year,\r\n                month: this.state.month,\r\n                type: this.state.type,\r\n                status: this.state.status,\r\n                value: this.state.value,\r\n                user: this.state.user.id,\r\n                description: this.state.description\r\n            })\r\n            .then(response => {\r\n                popUp.successPopUp(\"Lançamento editado com sucesso\")\r\n                this.props.search()\r\n            }).catch(error => {\r\n                popUp.errorPopUp(error.response.data)\r\n        })\r\n        this.setState({entryDialog: false})\r\n    }\r\n\r\n    updateStatus = (id, status) => {\r\n        this.entryService.updateStatus(id, { status } )\r\n        .then(response => {\r\n            popUp.successPopUp(\"Lançamento \" + status + \" com sucesso\")\r\n            this.props.search()\r\n        }).catch(error => {\r\n            popUp.errorPopUp(error.response.data)\r\n        })\r\n    }\r\n\r\n\r\n    render (){\r\n\r\n        const rightToolbarTemplate = () => {\r\n            return (\r\n                <React.Fragment>\r\n                    <Button label=\"Deletar\" icon=\"pi pi-trash\" className=\"p-button-danger\"\r\n                            onClick={this.delete}\r\n                            />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        const leftToolbarTemplate = () => {\r\n            return (\r\n                <React.Fragment>\r\n                    {/* <FileUpload mode=\"basic\" accept=\"*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /> */}\r\n                    <Button label=\"Exportar\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        const actionBodyTemplate = (rowData) => {\r\n            return (\r\n                <React.Fragment>\r\n                    <Button title = \"Efetivar\"\r\n                            icon=\"pi pi-check-circle\" \r\n                            className=\"p-button-rounded p-button-success\"\r\n                            disabled={rowData.entryStatus !== \"PENDENTE\"}\r\n                            onClick={() => this.updateStatus(rowData.id, 'confirmado')} />\r\n\r\n                    <Button title = \"Cancelar\" \r\n                            icon=\"pi pi-times-circle\" \r\n                            className=\"p-button-rounded p-button-danger right-button\"\r\n                            style={ {marginLeft: '3px'} }\r\n                            disabled={rowData.entryStatus !== \"PENDENTE\"}\r\n                            onClick={() => this.updateStatus(rowData.id, 'cancelado')} />\r\n\r\n                    <Button title = \"Editar\"\r\n                            icon=\"pi pi-pencil\"\r\n                            className=\"p-button-rounded p-button-primary p-mr-2\"\r\n                            style={ {marginLeft: '3px'} }\r\n                            onClick={() => this.editProduct(rowData)} />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        const entryDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.updateEntry} />\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n            </React.Fragment>\r\n        )\r\n\r\n        const renderDeleteConfirmationFooter = () => {\r\n            return (\r\n                <div>\r\n                    <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={() => this.setState({displayConfirmation: false})}\r\n                            className=\"p-button-text\" />\r\n                    <Button label=\"Confirmar\" icon=\"pi pi-check\"\r\n                            onClick={() => this.props.deleteMulipleEntries(this.state.selectedEntries)} autoFocus />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const yearList = this.entryService.getYearList()\r\n        const typeList = this.entryService.getTypeList()\r\n        const statusList = this.entryService.getStatusList()\r\n        const monthList =  this.entryService.getMonthList()\r\n\r\n        return (\r\n            <div className=\"datatable-crud-demo\">\r\n            <Toast ref={this.toast} />\r\n\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\r\n\r\n                <DataTable ref={this.dt} value={this.props.list}\r\n                            selection={this.state.selectedEntries}\r\n                            onSelectionChange={(e) => this.setState({selectedEntries: e.value})}\r\n                            scrollable\r\n                            loading={this.props.loading}\r\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                    globalFilter={this.state.globalFilter} >\r\n\r\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                    <Column field=\"description\" header=\"Descrição\" sortable style ={ {width: '140px'} }></Column>\r\n                    <Column field=\"value\" header=\"Valor\" body={this.valueBodyTemplate} sortable style ={ {width: '140px'} }></Column>\r\n                    <Column field=\"year\" header=\"Ano\" sortable style ={ {width: '140px'} }></Column>\r\n                    <Column field=\"month\" header=\"Mês\" sortable style ={ {width: '140px'} }></Column>\r\n                    <Column field=\"entryType\" header=\"Tipo\" sortable style ={ {width: '140px'} }></Column>\r\n                    <Column field=\"entryStatus\" header=\"Status\" sortable style ={ {width: '140px'} }></Column>\r\n                    <Column body={actionBodyTemplate} style ={ {width: '150px'} }></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={this.state.entryDialog} style={{ width: '450px' }}\r\n                    header=\"Editar lançamento\"\r\n                    modal\r\n                    className=\"p-fluid\"\r\n                    footer={entryDialogFooter}\r\n                    onHide={this.hideDialog}>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"year\">Ano</label>\r\n                    <SelectMenu className={\"form-control \"}\r\n                            name=\"year\"\r\n                            list={yearList} \r\n                            value={this.state.year}\r\n                            onChange={this.handleChange}/> \r\n                </div>\r\n                <br/>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"month\">Mês</label>\r\n                    <SelectMenu className={\"form-control \" }\r\n                                        name=\"month\"\r\n                                        list= {monthList}\r\n                                        value={this.state.month}\r\n                                        onChange={this.handleChange}/>\r\n                </div>\r\n                <br/>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"type\">Tipo de Lançamento</label>\r\n                    <SelectMenu className={\"form-control \" }\r\n                                        name=\"type\"\r\n                                        list= {typeList} \r\n                                        value={this.state.type}\r\n                                        onChange={this.handleChange}/>  \r\n                </div>\r\n                <br/>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"status\">Status do Lançamento</label>\r\n                    <SelectMenu className=\"form-control\"\r\n                                        name=\"status\"\r\n                                        list= {statusList} \r\n                                        value={this.state.status}\r\n                                        onChange={this.handleChange}/>\r\n                </div>\r\n                <br/>\r\n                <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"value\">Valor</label>\r\n                        <InputNumber id=\"value\"\r\n                                     value={this.state.value}\r\n                                     name=\"value\"\r\n                                     onValueChange={this.handleChange}\r\n                                     mode=\"currency\"\r\n                                     currency=\"BRL\"\r\n                                     locale=\"pt-BR\"\r\n                                     placeholder=\"Digite o valor\" />\r\n                </div>\r\n                    <br/>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"user\">Usuário</label>\r\n                    <InputText id=\"user\" value={this.state.user.email}  disabled/>\r\n                </div>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"description\">Descrição</label>\r\n                    <textarea   className={\"form-control \" }\r\n                                id=\"description\"\r\n                                name=\"description\"\r\n                                value={this.state.description}\r\n                                style={{marginTop: '0px', marginBottom: '0px', height: '80px'}}\r\n                                placeholder=\"Digite a descrição\"\r\n                                onChange = {this.handleChange} />\r\n                </div>\r\n\r\n            </Dialog>\r\n            <Dialog header=\"Deletar lançamento\"\r\n                        visible={this.state.displayConfirmation}\r\n                        modal = {true} //congela restante da tela\r\n                        style={{ width: '350px' }}\r\n                        footer={renderDeleteConfirmationFooter()}\r\n                        onHide={() => this.setState({displayConfirmation: false})}>\r\n                    <div className=\"confirmation-content row\" style={{marginLeft: '10px'}}>\r\n                        <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem', marginRight: '10px'}} />\r\n                        <div style={{marginBottom: '10px'}}> Deseja confirmar deleção? </div>\r\n                    </div>\r\n                </Dialog>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n}  \r\n\r\nexport default CrudTable",["118","119"],"D:\\Dev\\Fincances-Frontend\\src\\components\\toastr.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\form-group.js",[],"D:\\Dev\\Fincances-Frontend\\src\\components\\navbar\\navbar.js",["120"],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\authService.js",["121"],"import LocalStorageService from './localStorageService'\r\nimport SessionStorageService from './sessionStorageService'\r\n\r\nexport const userLoggedIn = 'userLoggedIn'\r\n\r\nexport default class AuthService {\r\n\r\n    static isUserLoggedIn(){\r\n        // const user = LocalStorageService.getItem(userLoggedIn)\r\n        const user = SessionStorageService.getItem(userLoggedIn)\r\n        return user && user.id\r\n    }\r\n\r\n    static userLoggedIn(){\r\n        // return LocalStorageService.getItem(userLoggedIn)\r\n        return SessionStorageService.getItem(userLoggedIn)\r\n    }\r\n\r\n    static login(user) {\r\n        // LocalStorageService.addItem(userLoggedIn, user)\r\n        SessionStorageService.addItem(userLoggedIn, user)\r\n    }\r\n\r\n    static logOut(){\r\n        // LocalStorageService.removeItem(userLoggedIn)\r\n        SessionStorageService.removeItem(userLoggedIn)\r\n    }\r\n\r\n}","D:\\Dev\\Fincances-Frontend\\src\\main\\authProvider.js",[],"D:\\Dev\\Fincances-Frontend\\src\\app\\service\\sessionStorageService.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"128"},{"ruleId":"124","replacedBy":"129"},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":57,"column":1,"nodeType":"136","endLine":61,"endColumn":2},{"ruleId":"137","severity":1,"message":"138","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":20},{"ruleId":"122","replacedBy":"141"},{"ruleId":"124","replacedBy":"142"},{"ruleId":"134","severity":1,"message":"135","line":40,"column":1,"nodeType":"136","endLine":47,"endColumn":2},{"ruleId":"137","severity":1,"message":"143","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":27},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],["144"],["145"],["144"],["145"],["144"],["145"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'FileUpload' is defined but never used.","Identifier","unusedVar",["144"],["145"],"'LocalStorageService' is defined but never used.","no-global-assign","no-unsafe-negation"]