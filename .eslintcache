[{"C:\\Dev\\finances-frontend\\src\\reportWebVitals.js":"1","C:\\Dev\\finances-frontend\\src\\index.js":"2","C:\\Dev\\finances-frontend\\src\\views\\login.js":"3","C:\\Dev\\finances-frontend\\src\\components\\card.js":"4","C:\\Dev\\finances-frontend\\src\\components\\form-group.js":"5","C:\\Dev\\finances-frontend\\src\\views\\signUp.js":"6","C:\\Dev\\finances-frontend\\src\\main\\App.js":"7","C:\\Dev\\finances-frontend\\src\\components\\navbar\\navbar.js":"8","C:\\Dev\\finances-frontend\\src\\components\\navbar\\navItem.js":"9","C:\\Dev\\finances-frontend\\src\\views\\home.js":"10","C:\\Dev\\finances-frontend\\src\\app\\apiServices.js":"11","C:\\Dev\\finances-frontend\\src\\app\\service\\userService.js":"12","C:\\Dev\\finances-frontend\\src\\app\\service\\localStorageService.js":"13","C:\\Dev\\finances-frontend\\src\\components\\toastr.js":"14","C:\\Dev\\finances-frontend\\src\\main\\routes.js":"15","C:\\Dev\\finances-frontend\\src\\components\\selectMenu.js":"16","C:\\Dev\\finances-frontend\\src\\views\\entry\\searchEntry.js":"17","C:\\Dev\\finances-frontend\\src\\views\\entry\\entryTable.js":"18"},{"size":362,"mtime":1608640018750,"results":"19","hashOfConfig":"20"},{"size":483,"mtime":1608659534234,"results":"21","hashOfConfig":"20"},{"size":4290,"mtime":1608745115937,"results":"22","hashOfConfig":"20"},{"size":654,"mtime":1608656937373,"results":"23","hashOfConfig":"20"},{"size":256,"mtime":1608647011612,"results":"24","hashOfConfig":"20"},{"size":7933,"mtime":1608747101182,"results":"25","hashOfConfig":"20"},{"size":450,"mtime":1608762021663,"results":"26","hashOfConfig":"20"},{"size":1772,"mtime":1608672437361,"results":"27","hashOfConfig":"20"},{"size":226,"mtime":1608672596985,"results":"28","hashOfConfig":"20"},{"size":1888,"mtime":1608736122394,"results":"29","hashOfConfig":"20"},{"size":566,"mtime":1608735379788,"results":"30","hashOfConfig":"20"},{"size":409,"mtime":1608741953413,"results":"31","hashOfConfig":"20"},{"size":259,"mtime":1608736129393,"results":"32","hashOfConfig":"20"},{"size":838,"mtime":1608738410001,"results":"33","hashOfConfig":"20"},{"size":671,"mtime":1608755971305,"results":"34","hashOfConfig":"20"},{"size":439,"mtime":1608759905042,"results":"35","hashOfConfig":"20"},{"size":2921,"mtime":1608762147218,"results":"36","hashOfConfig":"20"},{"size":990,"mtime":1608762631975,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"y7y4p3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\finances-frontend\\src\\reportWebVitals.js",[],["83","84"],"C:\\Dev\\finances-frontend\\src\\index.js",[],["85","86"],"C:\\Dev\\finances-frontend\\src\\views\\login.js",["87"],"import React from 'react'\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { FaSignInAlt } from 'react-icons/fa'\r\nimport { withRouter } from 'react-router-dom'\r\nimport UserService from '../app/service/userService'\r\nimport LocalStorageService from '../app/service/localStorageService'\r\nimport {errorPopUp, successPopUp} from '../components/toastr'\r\n\r\nclass Login extends React.Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.userService = new UserService;\r\n    }\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        errorEmailMessage: null,\r\n        inputEmailErrorClass: null,\r\n        errorPasswordMessage: null,\r\n        inputPasswordErrorClass: null\r\n    }\r\n\r\n    resetView = () => {\r\n        this.setState({errorEmailMessage: null})\r\n        this.setState({inputEmailErrorClass: null})\r\n        this.setState({errorPasswordMessage: null})\r\n        this.setState({inputPasswordErrorClass: null})\r\n    }\r\n\r\n    login = () => {\r\n        this.resetView()\r\n        this.userService.auth(\r\n        {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(response => {\r\n            LocalStorageService.addItem('userLoggedIn', response.data)\r\n            successPopUp(\"Login efetuado com sucesso\")\r\n            this.props.history.push(\"/home\")\r\n        }).catch(error => {\r\n            var data = error.response.data\r\n            if(data.toLowerCase().includes(\"email\")){\r\n            this.setState({errorEmailMessage: error.response.data})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            } else if(data.toLowerCase().includes(\"senha\")){\r\n                this.setState({errorPasswordMessage: error.response.data})\r\n                this.setState({inputPasswordErrorClass: \"is-invalid\"})\r\n            }\r\n            errorPopUp(error.response.data)\r\n        })\r\n    }\r\n\r\n    signUp = () => {\r\n        this.props.history.push('/signUp')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6\" style = { {position : 'relative', left : '300px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                        <Card title = \"Login\">\r\n                            <fieldset>\r\n                                <FormGroup label = \"Email: \" htmlFor = \"exampleInputEmail1\">\r\n                                    <input type=\"email\"\r\n                                    className={\"form-control \" + this.state.inputEmailErrorClass}\r\n                                    value = {this.state.email}\r\n                                    onChange = {e => this.setState({email: e.target.value})}\r\n                                    id=\"exampleInputEmail1\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Digite o Email\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorEmailMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Senha: \" htmlFor = \"exampleInputPassword1\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.inputPasswordErrorClass}\r\n                                    value = {this.state.password}\r\n                                    onChange = {e => this.setState({password: e.target.value})}\r\n                                    id=\"exampleInputPassword1\"\r\n                                    placeholder=\"Password\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <button className=\"btn btn-success\" onClick = {this.login}><FaSignInAlt />  Entrar</button>\r\n                                <button className=\"btn btn-danger\" onClick={this.signUp} ><FaSave />  Cadastrar</button>\r\n                            </fieldset>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(Login)",["88","89"],"C:\\Dev\\finances-frontend\\src\\components\\card.js",[],"C:\\Dev\\finances-frontend\\src\\components\\form-group.js",[],"C:\\Dev\\finances-frontend\\src\\views\\signUp.js",["90"],"import React from 'react'\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport { FaCheckSquare } from 'react-icons/fa';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom'\r\nimport UserService from '../app/service/userService';\r\nimport { successPopUp, errorPopUp } from '../components/toastr';\r\n\r\n\r\nclass SingUp extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.userService = new UserService;\r\n    }\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        errorEmailMessage: null,\r\n        inputEmailErrorClass: null,\r\n        errorConfirmPasswordMessage: null,\r\n        inputConfirmPasswordErrorClass: null,\r\n        errorPasswordMessage: null,\r\n        inputPasswordErrorClass: null,\r\n        errorNameMessage: null,\r\n        inputNameErrorClass: null,\r\n        signUpSuccessInputClass: null\r\n    }\r\n    resetView = () => {\r\n        this.setState({errorEmailMessage: null})\r\n        this.setState({inputEmailErrorClass: null})\r\n        this.setState({errorConfirmPasswordMessage: null})\r\n        this.setState({inputConfirmPasswordErrorClass: null})\r\n        this.setState({errorPasswordMessage: null})\r\n        this.setState({inputPasswordErrorClass: null})\r\n        this.setState({errorNameMessage: null})\r\n        this.setState({inputNameErrorClass: null})\r\n        this.setState({signUpSuccessInputClass: null})\r\n\r\n    }\r\n    checkData = () => {\r\n        var check = true\r\n\r\n        if(!this.state.name){\r\n            this.setState({errorNameMessage: \"Campo nome é obrigatório\"})\r\n            this.setState({inputNameErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        if(!this.state.email){\r\n            this.setState({errorEmailMessage: \"Campo email é obrigatório\"})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            check=false\r\n        } else if(!this.state.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\r\n            this.setState({errorEmailMessage: \"Informe um email válido\"})\r\n            this.setState({inputEmailErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        if(!this.state.password){\r\n            this.setState({errorPasswordMessage: \"Campo senha é obrigatório\"})\r\n            this.setState({inputPasswordErrorClass: \"is-invalid\"})    \r\n            check=false        \r\n        }\r\n        if(!this.state.confirmPassword){\r\n            this.setState({errorConfirmPasswordMessage: \"Campo confirmação de senha é obrigatório\"})\r\n            this.setState({inputConfirmPasswordErrorClass: \"is-invalid\"})    \r\n            check=false  \r\n        }\r\n        if(this.state.password && this.state.confirmPassword && this.state.password !== this.state.confirmPassword){\r\n            this.setState({errorConfirmPasswordMessage: \"As senhas não conferem\"})\r\n            this.setState({inputConfirmPasswordErrorClass: \"is-invalid\"})\r\n            check=false\r\n        }\r\n        return check\r\n    }\r\n\r\n    signUp = () => {\r\n        this.resetView()\r\n        if(this.checkData()){\r\n            this.userService.signUp({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }).then(response => {\r\n                successPopUp('Usuário cadastrado com sucesso')\r\n                this.setState({signUpSuccessInputClass: \"is-valid\"})\r\n            }).catch(error => {\r\n                var data = error.response.data\r\n                errorPopUp(data)                \r\n            })\r\n        }\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"row\">\r\n                <div className = \"col-md-6\" style = { {position : 'relative', left : '300px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                        <Card title = \"Cadastro de Usuário\">\r\n                        <fieldset>\r\n                                <FormGroup label = \"Nome: \" htmlFor = \"InputName\">\r\n                                    <input type=\"text\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputNameErrorClass}\r\n                                    name = \"name\"\r\n                                    value = {this.state.name}\r\n                                    onChange = {e => this.setState({name: e.target.value})}\r\n                                    id=\"InputName\"\r\n                                    aria-describedby=\"NameHelp\"\r\n                                    placeholder=\"Digite seu nome\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorNameMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Email: \" htmlFor = \"InputEmail\">\r\n                                    <input type=\"email\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputEmailErrorClass}\r\n                                    name = \"email\"\r\n                                    value = {this.state.email}\r\n                                    onChange = {e => this.setState({email: e.target.value})}\r\n                                    id=\"InputEmail\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Digite seu Email\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorEmailMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Senha: \" htmlFor = \"InputPassword\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.signUpSuccessInputClass + \" \"\r\n                                                + this.state.inputPasswordErrorClass}\r\n                                    name = \"password\"\r\n                                    value = {this.state.password}\r\n                                    onChange = {e => this.setState({password: e.target.value})}\r\n                                    id=\"InputPassword\"\r\n                                    placeholder=\"Digite a senha\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <FormGroup label = \"Confirmação de Senha: \" htmlFor = \"InputConfirmPassword\">\r\n                                    <input type=\"password\"\r\n                                    className={\"form-control \" + this.state.inputConfirmPasswordErrorClass + \" \"\r\n                                                + this.state.signUpSuccessInputClass}\r\n                                    value = {this.state.confirmPassword}\r\n                                    onChange = {e => this.setState({confirmPassword: e.target.value})}\r\n                                    id=\"InputConfirmPassword\"\r\n                                    placeholder=\"Repita a senha\" />\r\n                                    <div class=\"invalid-feedback\">{this.state.errorConfirmPasswordMessage}</div>\r\n                                </FormGroup>\r\n                                <button className=\"btn btn-success\" onClick={this.signUp} ><FaCheckSquare />  Cadastrar</button>\r\n                                <button className=\"btn btn-danger\" onClick={this.cancel}><FaTimes />  Cancelar</button>\r\n                            </fieldset>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SingUp)","C:\\Dev\\finances-frontend\\src\\main\\App.js",[],"C:\\Dev\\finances-frontend\\src\\components\\navbar\\navbar.js",["91","92","93","94","95","96"],"import React from 'react';\r\nimport NavItem from './navItem'\r\n\r\nfunction Navbar() {\r\n    \r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a className=\"navbar-brand\" href=\"#\">Finances</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <NavItem href=\"#/home\" label = \"Home\"/>\r\n        <NavItem href=\"#/signUp\" label = \"Usuários\"/>\r\n        <NavItem href=\"#\" label = \"Lançamentos\"/>\r\n        <NavItem href=\"#/login\" label = \"Login\"/>\r\n        <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"\r\n            role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n            <div className=\"dropdown-menu\">\r\n            <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            <div className=\"dropdown-divider\"></div>\r\n            <a className=\"dropdown-item\" href=\"#\">Separated link</a>\r\n            </div>\r\n        </li>              \r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n        <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n    </nav>       \r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Dev\\finances-frontend\\src\\components\\navbar\\navItem.js",[],["97","98"],"C:\\Dev\\finances-frontend\\src\\views\\home.js",["99"],"import React from 'react'\r\nimport LocalStorageService from '../app/service/localStorageService';\r\nimport UserService from '../app/service/userService';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(){\r\n      super();\r\n      this.userService = new UserService;\r\n    }\r\n    state = {\r\n      balance: 0\r\n    }\r\n\r\n    componentDidMount(){\r\n      const user = LocalStorageService.getItem(\"userLoggedIn\")\r\n      this.userService.getBalance(user.id)\r\n        .then(response => {\r\n          this.setState({balance: response.data})\r\n        }).catch(error => {\r\n          console.error(error.response)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div className = \"row\">\r\n                <div className = \"col-md-10\" style = { {position : 'relative', left : '100px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n                      <div className=\"jumbotron\">\r\n                      <h1 >Bem vindo!</h1>\r\n                      <p >Esse é seu sistema de finanças.</p>\r\n                      <p >Seu saldo para o mês atual é de R$ {this.state.balance}</p>\r\n                      <hr className=\"my-4\" />\r\n                      <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\r\n                      <p className=\"lead\">\r\n                        <a className=\"btn btn-primary\"\r\n                        href=\"#/signUp\"\r\n                        role=\"button\"><i className=\"fa fa-users\"></i>  Cadastrar Usuário</a>\r\n                        <a className=\"btn btn-danger\"\r\n                        href=\"#/home\"\r\n                        role=\"button\"><i className=\"fa fa-users\"></i>  Cadastrar Lançamento</a>\r\n                      </p>\r\n                      </div>\r\n                    </div>      \r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","C:\\Dev\\finances-frontend\\src\\app\\apiServices.js",[],"C:\\Dev\\finances-frontend\\src\\app\\service\\userService.js",[],["100","101"],"C:\\Dev\\finances-frontend\\src\\app\\service\\localStorageService.js",[],"C:\\Dev\\finances-frontend\\src\\components\\toastr.js",[],"C:\\Dev\\finances-frontend\\src\\main\\routes.js",[],"C:\\Dev\\finances-frontend\\src\\components\\selectMenu.js",[],"C:\\Dev\\finances-frontend\\src\\views\\entry\\searchEntry.js",[],"C:\\Dev\\finances-frontend\\src\\views\\entry\\entryTable.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":15,"column":28,"nodeType":"110","messageId":"111","endLine":15,"endColumn":43,"fix":"112"},{"ruleId":"102","replacedBy":"113"},{"ruleId":"104","replacedBy":"114"},{"ruleId":"108","severity":1,"message":"109","line":15,"column":28,"nodeType":"110","messageId":"111","endLine":15,"endColumn":43,"fix":"115"},{"ruleId":"116","severity":1,"message":"117","line":8,"column":5,"nodeType":"118","endLine":8,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":20,"column":13,"nodeType":"118","endLine":21,"endColumn":70},{"ruleId":"116","severity":1,"message":"117","line":23,"column":13,"nodeType":"118","endLine":23,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":24,"column":13,"nodeType":"118","endLine":24,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":25,"column":13,"nodeType":"118","endLine":25,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":27,"column":13,"nodeType":"118","endLine":27,"endColumn":51},{"ruleId":"102","replacedBy":"119"},{"ruleId":"104","replacedBy":"120"},{"ruleId":"108","severity":1,"message":"109","line":9,"column":26,"nodeType":"110","messageId":"111","endLine":9,"endColumn":41,"fix":"121"},{"ruleId":"102","replacedBy":"122"},{"ruleId":"104","replacedBy":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"126","text":"127"},["124"],["125"],{"range":"128","text":"127"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["124"],["125"],{"range":"129","text":"127"},["124"],["125"],"no-global-assign","no-unsafe-negation",[563,563],"()",[502,502],[271,271]]